// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: token_manager/v1/token_manager.proto

package token_managerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdStatExtraList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvertiserId int64 `protobuf:"varint,1,opt,name=advertiser_id,json=advertiserId,proto3" json:"advertiser_id,omitempty"`
	// 该账户下在查询时间内学习成功的计划数
	LearnedCount int32 `protobuf:"varint,2,opt,name=learned_count,json=learnedCount,proto3" json:"learned_count,omitempty"`
}

func (x *AdStatExtraList) Reset() {
	*x = AdStatExtraList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdStatExtraList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdStatExtraList) ProtoMessage() {}

func (x *AdStatExtraList) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdStatExtraList.ProtoReflect.Descriptor instead.
func (*AdStatExtraList) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{0}
}

func (x *AdStatExtraList) GetAdvertiserId() int64 {
	if x != nil {
		return x.AdvertiserId
	}
	return 0
}

func (x *AdStatExtraList) GetLearnedCount() int32 {
	if x != nil {
		return x.LearnedCount
	}
	return 0
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalCount int32 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{1}
}

func (x *PageInfo) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PageInfo) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 广告主
type Advertiser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告主账户id
	AdCustomerId int64 `protobuf:"varint,1,opt,name=ad_customer_id,json=adCustomerId,proto3" json:"ad_customer_id,omitempty"`
	// 广告账户名
	AdCustomerName string `protobuf:"bytes,2,opt,name=ad_customer_name,json=adCustomerName,proto3" json:"ad_customer_name,omitempty"`
	// 公司名
	Company string `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *Advertiser) Reset() {
	*x = Advertiser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Advertiser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Advertiser) ProtoMessage() {}

func (x *Advertiser) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Advertiser.ProtoReflect.Descriptor instead.
func (*Advertiser) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{2}
}

func (x *Advertiser) GetAdCustomerId() int64 {
	if x != nil {
		return x.AdCustomerId
	}
	return 0
}

func (x *Advertiser) GetAdCustomerName() string {
	if x != nil {
		return x.AdCustomerName
	}
	return ""
}

func (x *Advertiser) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	TotalCount int64 `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{3}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 行业
type Industry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 行业ID
	IndustryId int64 `protobuf:"varint,1,opt,name=industry_id,json=industryId,proto3" json:"industry_id,omitempty"`
	// 行业名称
	IndustryName string `protobuf:"bytes,2,opt,name=industry_name,json=industryName,proto3" json:"industry_name,omitempty"`
	// 所在级别，1：一级行业、2：二级行业、3：三级行业
	Level int64 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	// 该行业的一级行业ID
	FirstIndustryId int64 `protobuf:"varint,4,opt,name=first_industry_id,json=firstIndustryId,proto3" json:"first_industry_id,omitempty"`
	// 该行业的一级行业名称
	FirstIndustryName string `protobuf:"bytes,5,opt,name=first_industry_name,json=firstIndustryName,proto3" json:"first_industry_name,omitempty"`
	// 该行业的二级行业ID
	SecondIndustryId int64 `protobuf:"varint,6,opt,name=second_industry_id,json=secondIndustryId,proto3" json:"second_industry_id,omitempty"`
	// 该行业的二级行业名称
	SecondIndustryName string `protobuf:"bytes,7,opt,name=second_industry_name,json=secondIndustryName,proto3" json:"second_industry_name,omitempty"`
	// 该行业的三级行业ID
	ThirdIndustryId int64 `protobuf:"varint,8,opt,name=third_industry_id,json=thirdIndustryId,proto3" json:"third_industry_id,omitempty"`
	// 该行业的三级行业名称
	ThirdIndustryName string `protobuf:"bytes,9,opt,name=third_industry_name,json=thirdIndustryName,proto3" json:"third_industry_name,omitempty"`
	// 父id
	Pid int64 `protobuf:"varint,10,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *Industry) Reset() {
	*x = Industry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Industry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Industry) ProtoMessage() {}

func (x *Industry) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Industry.ProtoReflect.Descriptor instead.
func (*Industry) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{4}
}

func (x *Industry) GetIndustryId() int64 {
	if x != nil {
		return x.IndustryId
	}
	return 0
}

func (x *Industry) GetIndustryName() string {
	if x != nil {
		return x.IndustryName
	}
	return ""
}

func (x *Industry) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Industry) GetFirstIndustryId() int64 {
	if x != nil {
		return x.FirstIndustryId
	}
	return 0
}

func (x *Industry) GetFirstIndustryName() string {
	if x != nil {
		return x.FirstIndustryName
	}
	return ""
}

func (x *Industry) GetSecondIndustryId() int64 {
	if x != nil {
		return x.SecondIndustryId
	}
	return 0
}

func (x *Industry) GetSecondIndustryName() string {
	if x != nil {
		return x.SecondIndustryName
	}
	return ""
}

func (x *Industry) GetThirdIndustryId() int64 {
	if x != nil {
		return x.ThirdIndustryId
	}
	return 0
}

func (x *Industry) GetThirdIndustryName() string {
	if x != nil {
		return x.ThirdIndustryName
	}
	return ""
}

func (x *Industry) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

// 日流水
type FinanceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 现金支出(单位元)
	CashCost float32 `protobuf:"fixed32,1,opt,name=cash_cost,json=cashCost,proto3" json:"cash_cost,omitempty"`
	// 总支出(单位元)
	Cost float32 `protobuf:"fixed32,2,opt,name=cost,proto3" json:"cost,omitempty"`
	// 赠款支出(单位元)
	RewardCost float32 `protobuf:"fixed32,3,opt,name=reward_cost,json=rewardCost,proto3" json:"reward_cost,omitempty"`
	// 共享钱包支出
	SharedWalletCost float32 `protobuf:"fixed32,4,opt,name=shared_wallet_cost,json=sharedWalletCost,proto3" json:"shared_wallet_cost,omitempty"`
	// 广告主
	AdvertiserId int64 `protobuf:"varint,5,opt,name=advertiser_id,json=advertiserId,proto3" json:"advertiser_id,omitempty"`
}

func (x *FinanceDetail) Reset() {
	*x = FinanceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinanceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinanceDetail) ProtoMessage() {}

func (x *FinanceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinanceDetail.ProtoReflect.Descriptor instead.
func (*FinanceDetail) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{5}
}

func (x *FinanceDetail) GetCashCost() float32 {
	if x != nil {
		return x.CashCost
	}
	return 0
}

func (x *FinanceDetail) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *FinanceDetail) GetRewardCost() float32 {
	if x != nil {
		return x.RewardCost
	}
	return 0
}

func (x *FinanceDetail) GetSharedWalletCost() float32 {
	if x != nil {
		return x.SharedWalletCost
	}
	return 0
}

func (x *FinanceDetail) GetAdvertiserId() int64 {
	if x != nil {
		return x.AdvertiserId
	}
	return 0
}

type Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialId   int64  `protobuf:"varint,1,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	AdvertiserId int64  `protobuf:"varint,2,opt,name=advertiser_id,json=advertiserId,proto3" json:"advertiser_id,omitempty"`
	Md5          string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *Material) Reset() {
	*x = Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Material) ProtoMessage() {}

func (x *Material) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Material.ProtoReflect.Descriptor instead.
func (*Material) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{6}
}

func (x *Material) GetMaterialId() int64 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *Material) GetAdvertiserId() int64 {
	if x != nil {
		return x.AdvertiserId
	}
	return 0
}

func (x *Material) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{7}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{8}
}

// 查询广告计划学习期状态
type GetAdStatExtraInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开始时间(对比计划更新时间)
	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 结束时间(对比计划更新时间)
	EndTime string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 要查询的账户
	AdvertiserIds []int64 `protobuf:"varint,3,rep,packed,name=advertiser_ids,json=advertiserIds,proto3" json:"advertiser_ids,omitempty"`
	Page          int32   `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetAdStatExtraInfoRequest) Reset() {
	*x = GetAdStatExtraInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdStatExtraInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdStatExtraInfoRequest) ProtoMessage() {}

func (x *GetAdStatExtraInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdStatExtraInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAdStatExtraInfoRequest) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{9}
}

func (x *GetAdStatExtraInfoRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetAdStatExtraInfoRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetAdStatExtraInfoRequest) GetAdvertiserIds() []int64 {
	if x != nil {
		return x.AdvertiserIds
	}
	return nil
}

func (x *GetAdStatExtraInfoRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetAdStatExtraInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*AdStatExtraList `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	PageInfo *PageInfo          `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
}

func (x *GetAdStatExtraInfoResponse) Reset() {
	*x = GetAdStatExtraInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdStatExtraInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdStatExtraInfoResponse) ProtoMessage() {}

func (x *GetAdStatExtraInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdStatExtraInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAdStatExtraInfoResponse) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{10}
}

func (x *GetAdStatExtraInfoResponse) GetList() []*AdStatExtraList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetAdStatExtraInfoResponse) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

// 获取广告主
type FindAdvertiserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户
	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	// 媒体
	PlatForm int64 `protobuf:"varint,2,opt,name=plat_form,json=platForm,proto3" json:"plat_form,omitempty"`
	// 资质名称
	Company []string `protobuf:"bytes,3,rep,name=company,proto3" json:"company,omitempty"`
	// 架构
	TopsignId int64 `protobuf:"varint,4,opt,name=topsign_id,json=topsignId,proto3" json:"topsign_id,omitempty"`
	// 分页
	Page int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	// 数量
	Limit int32 `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	// 广告主名称
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// 品牌id
	ClientId int64 `protobuf:"varint,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// 资质id
	CustomerId int64 `protobuf:"varint,9,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *FindAdvertiserRequest) Reset() {
	*x = FindAdvertiserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAdvertiserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAdvertiserRequest) ProtoMessage() {}

func (x *FindAdvertiserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAdvertiserRequest.ProtoReflect.Descriptor instead.
func (*FindAdvertiserRequest) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{11}
}

func (x *FindAdvertiserRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *FindAdvertiserRequest) GetPlatForm() int64 {
	if x != nil {
		return x.PlatForm
	}
	return 0
}

func (x *FindAdvertiserRequest) GetCompany() []string {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *FindAdvertiserRequest) GetTopsignId() int64 {
	if x != nil {
		return x.TopsignId
	}
	return 0
}

func (x *FindAdvertiserRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAdvertiserRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindAdvertiserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindAdvertiserRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *FindAdvertiserRequest) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

type FindAdvertiserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Advertisers      []*Advertiser `protobuf:"bytes,1,rep,name=advertisers,proto3" json:"advertisers,omitempty"`
	PaginationOffset *Pagination   `protobuf:"bytes,2,opt,name=pagination_offset,json=paginationOffset,proto3" json:"pagination_offset,omitempty"`
}

func (x *FindAdvertiserResponse) Reset() {
	*x = FindAdvertiserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAdvertiserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAdvertiserResponse) ProtoMessage() {}

func (x *FindAdvertiserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAdvertiserResponse.ProtoReflect.Descriptor instead.
func (*FindAdvertiserResponse) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{12}
}

func (x *FindAdvertiserResponse) GetAdvertisers() []*Advertiser {
	if x != nil {
		return x.Advertisers
	}
	return nil
}

func (x *FindAdvertiserResponse) GetPaginationOffset() *Pagination {
	if x != nil {
		return x.PaginationOffset
	}
	return nil
}

// 根据广告主获取用户
type FindUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdCustomerId []int64 `protobuf:"varint,1,rep,packed,name=ad_customer_id,json=adCustomerId,proto3" json:"ad_customer_id,omitempty"`
	// 媒体
	PlatForm int64 `protobuf:"varint,2,opt,name=plat_form,json=platForm,proto3" json:"plat_form,omitempty"`
	// 架构
	TopsignId int64 `protobuf:"varint,3,opt,name=topsign_id,json=topsignId,proto3" json:"topsign_id,omitempty"`
}

func (x *FindUserRequest) Reset() {
	*x = FindUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserRequest) ProtoMessage() {}

func (x *FindUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserRequest.ProtoReflect.Descriptor instead.
func (*FindUserRequest) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{13}
}

func (x *FindUserRequest) GetAdCustomerId() []int64 {
	if x != nil {
		return x.AdCustomerId
	}
	return nil
}

func (x *FindUserRequest) GetPlatForm() int64 {
	if x != nil {
		return x.PlatForm
	}
	return 0
}

func (x *FindUserRequest) GetTopsignId() int64 {
	if x != nil {
		return x.TopsignId
	}
	return 0
}

type FindUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *FindUserResponse) Reset() {
	*x = FindUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserResponse) ProtoMessage() {}

func (x *FindUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserResponse.ProtoReflect.Descriptor instead.
func (*FindUserResponse) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{14}
}

func (x *FindUserResponse) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

// 获取行业分类
type FindIndustryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 只获取某级别数据，1:第一级,2:第二级,3:第三级，默认都返回
	Level int64 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	// 行业名称
	IndustryName string `protobuf:"bytes,2,opt,name=industry_name,json=industryName,proto3" json:"industry_name,omitempty"`
	// 行业id
	IndustryId int64 `protobuf:"varint,3,opt,name=industry_id,json=industryId,proto3" json:"industry_id,omitempty"`
	// 媒体
	PlatForm int64 `protobuf:"varint,4,opt,name=plat_form,json=platForm,proto3" json:"plat_form,omitempty"`
	// 父级
	Pid int64 `protobuf:"varint,5,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *FindIndustryListRequest) Reset() {
	*x = FindIndustryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindIndustryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindIndustryListRequest) ProtoMessage() {}

func (x *FindIndustryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindIndustryListRequest.ProtoReflect.Descriptor instead.
func (*FindIndustryListRequest) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{15}
}

func (x *FindIndustryListRequest) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *FindIndustryListRequest) GetIndustryName() string {
	if x != nil {
		return x.IndustryName
	}
	return ""
}

func (x *FindIndustryListRequest) GetIndustryId() int64 {
	if x != nil {
		return x.IndustryId
	}
	return 0
}

func (x *FindIndustryListRequest) GetPlatForm() int64 {
	if x != nil {
		return x.PlatForm
	}
	return 0
}

func (x *FindIndustryListRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type FindIndustryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Industry `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FindIndustryListResponse) Reset() {
	*x = FindIndustryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindIndustryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindIndustryListResponse) ProtoMessage() {}

func (x *FindIndustryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindIndustryListResponse.ProtoReflect.Descriptor instead.
func (*FindIndustryListResponse) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{16}
}

func (x *FindIndustryListResponse) GetList() []*Industry {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取日流水
type QianchuanFinanceDetailGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告主
	AdvertiserId []int64 `protobuf:"varint,1,rep,packed,name=advertiser_id,json=advertiserId,proto3" json:"advertiser_id,omitempty"`
	// 开始时间
	StartTime string `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 结束时间
	EndTime string `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 架构
	TopsignId int64 `protobuf:"varint,4,opt,name=topsign_id,json=topsignId,proto3" json:"topsign_id,omitempty"`
	// 媒体
	PlatForm int64 `protobuf:"varint,5,opt,name=plat_form,json=platForm,proto3" json:"plat_form,omitempty"`
}

func (x *QianchuanFinanceDetailGetRequest) Reset() {
	*x = QianchuanFinanceDetailGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QianchuanFinanceDetailGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QianchuanFinanceDetailGetRequest) ProtoMessage() {}

func (x *QianchuanFinanceDetailGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QianchuanFinanceDetailGetRequest.ProtoReflect.Descriptor instead.
func (*QianchuanFinanceDetailGetRequest) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{17}
}

func (x *QianchuanFinanceDetailGetRequest) GetAdvertiserId() []int64 {
	if x != nil {
		return x.AdvertiserId
	}
	return nil
}

func (x *QianchuanFinanceDetailGetRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QianchuanFinanceDetailGetRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QianchuanFinanceDetailGetRequest) GetTopsignId() int64 {
	if x != nil {
		return x.TopsignId
	}
	return 0
}

func (x *QianchuanFinanceDetailGetRequest) GetPlatForm() int64 {
	if x != nil {
		return x.PlatForm
	}
	return 0
}

type QianchuanFinanceDetailGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinanceList []*FinanceDetail `protobuf:"bytes,1,rep,name=finance_list,json=financeList,proto3" json:"finance_list,omitempty"`
}

func (x *QianchuanFinanceDetailGetResponse) Reset() {
	*x = QianchuanFinanceDetailGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QianchuanFinanceDetailGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QianchuanFinanceDetailGetResponse) ProtoMessage() {}

func (x *QianchuanFinanceDetailGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QianchuanFinanceDetailGetResponse.ProtoReflect.Descriptor instead.
func (*QianchuanFinanceDetailGetResponse) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{18}
}

func (x *QianchuanFinanceDetailGetResponse) GetFinanceList() []*FinanceDetail {
	if x != nil {
		return x.FinanceList
	}
	return nil
}

// 获取素材id
type FindMaterialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// md5
	Md5 []string `protobuf:"bytes,1,rep,name=md5,proto3" json:"md5,omitempty"`
	// 架构
	TopsignId int64 `protobuf:"varint,2,opt,name=topsign_id,json=topsignId,proto3" json:"topsign_id,omitempty"`
	// 媒体
	PlatForm int64 `protobuf:"varint,3,opt,name=plat_form,json=platForm,proto3" json:"plat_form,omitempty"`
}

func (x *FindMaterialRequest) Reset() {
	*x = FindMaterialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMaterialRequest) ProtoMessage() {}

func (x *FindMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMaterialRequest.ProtoReflect.Descriptor instead.
func (*FindMaterialRequest) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{19}
}

func (x *FindMaterialRequest) GetMd5() []string {
	if x != nil {
		return x.Md5
	}
	return nil
}

func (x *FindMaterialRequest) GetTopsignId() int64 {
	if x != nil {
		return x.TopsignId
	}
	return 0
}

func (x *FindMaterialRequest) GetPlatForm() int64 {
	if x != nil {
		return x.PlatForm
	}
	return 0
}

type FindMaterialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Material []*Material `protobuf:"bytes,1,rep,name=material,proto3" json:"material,omitempty"`
}

func (x *FindMaterialResponse) Reset() {
	*x = FindMaterialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_manager_v1_token_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMaterialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMaterialResponse) ProtoMessage() {}

func (x *FindMaterialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_manager_v1_token_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMaterialResponse.ProtoReflect.Descriptor instead.
func (*FindMaterialResponse) Descriptor() ([]byte, []int) {
	return file_token_manager_v1_token_manager_proto_rawDescGZIP(), []int{20}
}

func (x *FindMaterialResponse) GetMaterial() []*Material {
	if x != nil {
		return x.Material
	}
	return nil
}

var File_token_manager_v1_token_manager_proto protoreflect.FileDescriptor

var file_token_manager_v1_token_manager_proto_rawDesc = []byte{
	0x0a, 0x24, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x5b, 0x0a, 0x0f, 0x41, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x0a,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x61, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x22, 0x57, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x90, 0x03,
	0x0a, 0x08, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64,
	0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x22, 0xb4, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x63,
	0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x0d, 0x0a, 0x0b, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x53, 0x74, 0x61, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x64, 0x53, 0x74, 0x61, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x02, 0x0a,
	0x15, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f,
	0x70, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0b, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65,
	0x72, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x73, 0x12, 0x49,
	0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x73, 0x0a, 0x0f, 0x46, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x22, 0x2d,
	0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xa4, 0x01,
	0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x70, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xbd, 0x01, 0x0a, 0x20, 0x51, 0x69, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x46, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x73, 0x69, 0x67,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x22, 0x67, 0x0a, 0x21, 0x51, 0x69, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x46, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x13, 0x46, 0x69, 0x6e,
	0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x64, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x73, 0x69, 0x67, 0x6e, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x22, 0x4e,
	0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x32, 0xe4,
	0x05, 0x0a, 0x13, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1d,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x71, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x64, 0x53, 0x74, 0x61, 0x74, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x53, 0x74, 0x61, 0x74, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x65, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x08, 0x46, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x29, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x19,
	0x51, 0x69, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x12, 0x32, 0x2e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x61,
	0x6e, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x69, 0x61, 0x6e, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x25, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xca, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x11,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x6f, 0x6e, 0x67, 0x70, 0x65, 0x6e, 0x67, 0x6a, 0x75, 0x2f, 0x6b, 0x34, 0x73, 0x2d, 0x61,
	0x70, 0x69, 0x2d, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x0f,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x1b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x10, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_token_manager_v1_token_manager_proto_rawDescOnce sync.Once
	file_token_manager_v1_token_manager_proto_rawDescData = file_token_manager_v1_token_manager_proto_rawDesc
)

func file_token_manager_v1_token_manager_proto_rawDescGZIP() []byte {
	file_token_manager_v1_token_manager_proto_rawDescOnce.Do(func() {
		file_token_manager_v1_token_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_token_manager_v1_token_manager_proto_rawDescData)
	})
	return file_token_manager_v1_token_manager_proto_rawDescData
}

var file_token_manager_v1_token_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_token_manager_v1_token_manager_proto_goTypes = []interface{}{
	(*AdStatExtraList)(nil),                   // 0: token_manager.v1.AdStatExtraList
	(*PageInfo)(nil),                          // 1: token_manager.v1.PageInfo
	(*Advertiser)(nil),                        // 2: token_manager.v1.Advertiser
	(*Pagination)(nil),                        // 3: token_manager.v1.Pagination
	(*Industry)(nil),                          // 4: token_manager.v1.Industry
	(*FinanceDetail)(nil),                     // 5: token_manager.v1.FinanceDetail
	(*Material)(nil),                          // 6: token_manager.v1.Material
	(*PingRequest)(nil),                       // 7: token_manager.v1.PingRequest
	(*PingResponse)(nil),                      // 8: token_manager.v1.PingResponse
	(*GetAdStatExtraInfoRequest)(nil),         // 9: token_manager.v1.GetAdStatExtraInfoRequest
	(*GetAdStatExtraInfoResponse)(nil),        // 10: token_manager.v1.GetAdStatExtraInfoResponse
	(*FindAdvertiserRequest)(nil),             // 11: token_manager.v1.FindAdvertiserRequest
	(*FindAdvertiserResponse)(nil),            // 12: token_manager.v1.FindAdvertiserResponse
	(*FindUserRequest)(nil),                   // 13: token_manager.v1.FindUserRequest
	(*FindUserResponse)(nil),                  // 14: token_manager.v1.FindUserResponse
	(*FindIndustryListRequest)(nil),           // 15: token_manager.v1.FindIndustryListRequest
	(*FindIndustryListResponse)(nil),          // 16: token_manager.v1.FindIndustryListResponse
	(*QianchuanFinanceDetailGetRequest)(nil),  // 17: token_manager.v1.QianchuanFinanceDetailGetRequest
	(*QianchuanFinanceDetailGetResponse)(nil), // 18: token_manager.v1.QianchuanFinanceDetailGetResponse
	(*FindMaterialRequest)(nil),               // 19: token_manager.v1.FindMaterialRequest
	(*FindMaterialResponse)(nil),              // 20: token_manager.v1.FindMaterialResponse
}
var file_token_manager_v1_token_manager_proto_depIdxs = []int32{
	0,  // 0: token_manager.v1.GetAdStatExtraInfoResponse.list:type_name -> token_manager.v1.AdStatExtraList
	1,  // 1: token_manager.v1.GetAdStatExtraInfoResponse.page_info:type_name -> token_manager.v1.PageInfo
	2,  // 2: token_manager.v1.FindAdvertiserResponse.advertisers:type_name -> token_manager.v1.Advertiser
	3,  // 3: token_manager.v1.FindAdvertiserResponse.pagination_offset:type_name -> token_manager.v1.Pagination
	4,  // 4: token_manager.v1.FindIndustryListResponse.list:type_name -> token_manager.v1.Industry
	5,  // 5: token_manager.v1.QianchuanFinanceDetailGetResponse.finance_list:type_name -> token_manager.v1.FinanceDetail
	6,  // 6: token_manager.v1.FindMaterialResponse.material:type_name -> token_manager.v1.Material
	7,  // 7: token_manager.v1.TokenManagerService.Ping:input_type -> token_manager.v1.PingRequest
	9,  // 8: token_manager.v1.TokenManagerService.GetAdStatExtraInfo:input_type -> token_manager.v1.GetAdStatExtraInfoRequest
	11, // 9: token_manager.v1.TokenManagerService.FindAdvertiser:input_type -> token_manager.v1.FindAdvertiserRequest
	13, // 10: token_manager.v1.TokenManagerService.FindUser:input_type -> token_manager.v1.FindUserRequest
	15, // 11: token_manager.v1.TokenManagerService.FindIndustryList:input_type -> token_manager.v1.FindIndustryListRequest
	17, // 12: token_manager.v1.TokenManagerService.QianchuanFinanceDetailGet:input_type -> token_manager.v1.QianchuanFinanceDetailGetRequest
	19, // 13: token_manager.v1.TokenManagerService.FindMaterial:input_type -> token_manager.v1.FindMaterialRequest
	8,  // 14: token_manager.v1.TokenManagerService.Ping:output_type -> token_manager.v1.PingResponse
	10, // 15: token_manager.v1.TokenManagerService.GetAdStatExtraInfo:output_type -> token_manager.v1.GetAdStatExtraInfoResponse
	12, // 16: token_manager.v1.TokenManagerService.FindAdvertiser:output_type -> token_manager.v1.FindAdvertiserResponse
	14, // 17: token_manager.v1.TokenManagerService.FindUser:output_type -> token_manager.v1.FindUserResponse
	16, // 18: token_manager.v1.TokenManagerService.FindIndustryList:output_type -> token_manager.v1.FindIndustryListResponse
	18, // 19: token_manager.v1.TokenManagerService.QianchuanFinanceDetailGet:output_type -> token_manager.v1.QianchuanFinanceDetailGetResponse
	20, // 20: token_manager.v1.TokenManagerService.FindMaterial:output_type -> token_manager.v1.FindMaterialResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_token_manager_v1_token_manager_proto_init() }
func file_token_manager_v1_token_manager_proto_init() {
	if File_token_manager_v1_token_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_token_manager_v1_token_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdStatExtraList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Advertiser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Industry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinanceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdStatExtraInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdStatExtraInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAdvertiserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAdvertiserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindIndustryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindIndustryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QianchuanFinanceDetailGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QianchuanFinanceDetailGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindMaterialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_manager_v1_token_manager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindMaterialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_token_manager_v1_token_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_token_manager_v1_token_manager_proto_goTypes,
		DependencyIndexes: file_token_manager_v1_token_manager_proto_depIdxs,
		MessageInfos:      file_token_manager_v1_token_manager_proto_msgTypes,
	}.Build()
	File_token_manager_v1_token_manager_proto = out.File
	file_token_manager_v1_token_manager_proto_rawDesc = nil
	file_token_manager_v1_token_manager_proto_goTypes = nil
	file_token_manager_v1_token_manager_proto_depIdxs = nil
}
